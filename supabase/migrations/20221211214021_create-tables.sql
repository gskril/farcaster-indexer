-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.profiles
(
    id bigint NOT NULL,
    address text COLLATE pg_catalog."default" NOT NULL,
    username text COLLATE pg_catalog."default",
    display_name text COLLATE pg_catalog."default",
    avatar_url text COLLATE pg_catalog."default",
    avatar_verified boolean,
    followers bigint,
    following bigint,
    bio text COLLATE pg_catalog."default",
    telegram text COLLATE pg_catalog."default",
    referrer text COLLATE pg_catalog."default",
    connected_address text COLLATE pg_catalog."default",
    registered_at timestamp with time zone,
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT profiles_pkey PRIMARY KEY (id, address)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.profiles
    OWNER to postgres;

ALTER TABLE IF EXISTS public.profiles
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.profiles TO anon;

GRANT ALL ON TABLE public.profiles TO authenticated;

GRANT ALL ON TABLE public.profiles TO postgres;

GRANT ALL ON TABLE public.profiles TO service_role;

CREATE TABLE IF NOT EXISTS public.casts
(
    type text COLLATE pg_catalog."default",
    published_at timestamp with time zone,
    sequence bigint,
    address text COLLATE pg_catalog."default",
    username text COLLATE pg_catalog."default",
    text text COLLATE pg_catalog."default",
    reply_parent_merkle_root text COLLATE pg_catalog."default",
    prev_merkle_root text COLLATE pg_catalog."default",
    signature text COLLATE pg_catalog."default",
    merkle_root text COLLATE pg_catalog."default" NOT NULL,
    thread_merkle_root text COLLATE pg_catalog."default",
    display_name text COLLATE pg_catalog."default",
    avatar_url text COLLATE pg_catalog."default",
    avatar_verified boolean,
    mentions jsonb,
    num_reply_children bigint,
    reply_parent_username text COLLATE pg_catalog."default",
    reply_parent_address text COLLATE pg_catalog."default",
    reactions bigint,
    recasts bigint,
    watches bigint,
    recasters jsonb,
    deleted boolean,
    CONSTRAINT casts_pkey PRIMARY KEY (merkle_root)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.casts
    OWNER to postgres;

ALTER TABLE IF EXISTS public.casts
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.casts TO anon;

GRANT ALL ON TABLE public.casts TO authenticated;

GRANT ALL ON TABLE public.casts TO postgres;

GRANT ALL ON TABLE public.casts TO service_role;

CREATE OR REPLACE FUNCTION public.casts_regex(
	regex text)
    RETURNS SETOF casts 
    LANGUAGE 'sql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$
  SELECT * FROM casts WHERE text ~ regex;
$BODY$;

ALTER FUNCTION public.casts_regex(text)
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.casts_regex(text) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.casts_regex(text) TO anon;

GRANT EXECUTE ON FUNCTION public.casts_regex(text) TO authenticated;

GRANT EXECUTE ON FUNCTION public.casts_regex(text) TO postgres;

GRANT EXECUTE ON FUNCTION public.casts_regex(text) TO service_role;
